{"ast":null,"code":"import React,{useState,useEffect}from'react';import'./App.css';import Sidebar from'./components/Sidebar';import MainArea from'./components/MainArea';import{initializeGoogleAI}from'./utils/googleAI';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){// State management\nconst[apiKey,setApiKey]=useState('');const[isApiKeySet,setIsApiKeySet]=useState(false);const[conversation,setConversation]=useState([]);const[currentTurn,setCurrentTurn]=useState(0);const[style,setStyle]=useState('Photorealistic');const[initialImage,setInitialImage]=useState(null);const[isLoading,setIsLoading]=useState(false);const[error,setError]=useState(null);const[success,setSuccess]=useState(null);// Load state from localStorage on mount\nuseEffect(()=>{const savedApiKey=localStorage.getItem('details_matter_api_key');const savedConversation=localStorage.getItem('details_matter_conversation');const savedCurrentTurn=localStorage.getItem('details_matter_current_turn');const savedStyle=localStorage.getItem('details_matter_style');if(savedApiKey){setApiKey(savedApiKey);setIsApiKeySet(true);try{initializeGoogleAI(savedApiKey);}catch(error){console.error('Failed to initialize Google AI:',error);}}if(savedConversation){try{setConversation(JSON.parse(savedConversation));}catch(error){console.error('Failed to parse saved conversation:',error);}}if(savedCurrentTurn){setCurrentTurn(parseInt(savedCurrentTurn,10));}if(savedStyle){setStyle(savedStyle);}},[]);// Save state to localStorage whenever it changes\nuseEffect(()=>{if(apiKey){localStorage.setItem('details_matter_api_key',apiKey);}},[apiKey]);useEffect(()=>{localStorage.setItem('details_matter_conversation',JSON.stringify(conversation));},[conversation]);useEffect(()=>{localStorage.setItem('details_matter_current_turn',currentTurn.toString());},[currentTurn]);useEffect(()=>{localStorage.setItem('details_matter_style',style);},[style]);// Handle API key setting\nconst handleApiKeySet=newApiKey=>{console.log('🔑 Setting API key:',newApiKey.substring(0,8)+'...');try{initializeGoogleAI(newApiKey);setApiKey(newApiKey);setIsApiKeySet(true);setError(null);setSuccess('API key set successfully!');setTimeout(()=>setSuccess(null),3000);console.log('✅ API key set successfully');}catch(error){console.error('❌ Failed to set API key:',error);setError(error.message);setIsApiKeySet(false);}};// Handle API key override\nconst handleApiKeyOverride=newApiKey=>{console.log('🔄 API key override requested:',newApiKey.substring(0,8)+'...');if(newApiKey.trim()){console.log('🔄 Calling handleApiKeySet with new key');handleApiKeySet(newApiKey.trim());setSuccess('API key overridden successfully!');}else{console.log('⚠️ Override cancelled - empty key provided');setError('Please provide a valid API key');}};// Handle style change\nconst handleStyleChange=newStyle=>{setStyle(newStyle);};// Handle initial image upload\nconst handleInitialImageUpload=file=>{if(file){const reader=new FileReader();reader.onload=e=>{setInitialImage(e.target.result);};reader.readAsDataURL(file);}else{setInitialImage(null);}};// Clear messages\nconst clearMessages=()=>{setError(null);setSuccess(null);};return/*#__PURE__*/_jsxs(\"div\",{className:\"app\",children:[/*#__PURE__*/_jsxs(\"header\",{className:\"header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"\\uD83C\\uDFA8 Only Details Matter\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Iteratively test how a generative model latches onto a single visual detail in an image and reimagines it inside entirely new scenes of its creation.\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Each turn: the model picks one salient detail from the previous image (a shape, object, texture, motif) and invents a different context that preserves only that detail's recognizable identity.\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"main-content\",children:[/*#__PURE__*/_jsx(Sidebar,{apiKey:apiKey,isApiKeySet:isApiKeySet,onApiKeySet:handleApiKeySet,onApiKeyOverride:handleApiKeyOverride,conversation:conversation,currentTurn:currentTurn,style:style,onStyleChange:handleStyleChange,onContinue:null// Will be implemented in MainArea\n,isLoading:isLoading,error:error,success:success,onClearMessages:clearMessages}),/*#__PURE__*/_jsx(MainArea,{conversation:conversation,setConversation:setConversation,currentTurn:currentTurn,setCurrentTurn:setCurrentTurn,style:style,initialImage:initialImage,onInitialImageUpload:handleInitialImageUpload,isApiKeySet:isApiKeySet,isLoading:isLoading,setIsLoading:setIsLoading,error:error,setError:setError,success:success,setSuccess:setSuccess,onClearMessages:clearMessages})]})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","Sidebar","MainArea","initializeGoogleAI","jsx","_jsx","jsxs","_jsxs","App","apiKey","setApiKey","isApiKeySet","setIsApiKeySet","conversation","setConversation","currentTurn","setCurrentTurn","style","setStyle","initialImage","setInitialImage","isLoading","setIsLoading","error","setError","success","setSuccess","savedApiKey","localStorage","getItem","savedConversation","savedCurrentTurn","savedStyle","console","JSON","parse","parseInt","setItem","stringify","toString","handleApiKeySet","newApiKey","log","substring","setTimeout","message","handleApiKeyOverride","trim","handleStyleChange","newStyle","handleInitialImageUpload","file","reader","FileReader","onload","e","target","result","readAsDataURL","clearMessages","className","children","onApiKeySet","onApiKeyOverride","onStyleChange","onContinue","onClearMessages","onInitialImageUpload"],"sources":["/home/mandubian/workspaces/mandubian/bananhack/details_matter_react/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Sidebar from './components/Sidebar';\nimport MainArea from './components/MainArea';\nimport { initializeGoogleAI } from './utils/googleAI';\n\nfunction App() {\n  // State management\n  const [apiKey, setApiKey] = useState('');\n  const [isApiKeySet, setIsApiKeySet] = useState(false);\n  const [conversation, setConversation] = useState([]);\n  const [currentTurn, setCurrentTurn] = useState(0);\n  const [style, setStyle] = useState('Photorealistic');\n  const [initialImage, setInitialImage] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n\n  // Load state from localStorage on mount\n  useEffect(() => {\n    const savedApiKey = localStorage.getItem('details_matter_api_key');\n    const savedConversation = localStorage.getItem('details_matter_conversation');\n    const savedCurrentTurn = localStorage.getItem('details_matter_current_turn');\n    const savedStyle = localStorage.getItem('details_matter_style');\n\n    if (savedApiKey) {\n      setApiKey(savedApiKey);\n      setIsApiKeySet(true);\n      try {\n        initializeGoogleAI(savedApiKey);\n      } catch (error) {\n        console.error('Failed to initialize Google AI:', error);\n      }\n    }\n\n    if (savedConversation) {\n      try {\n        setConversation(JSON.parse(savedConversation));\n      } catch (error) {\n        console.error('Failed to parse saved conversation:', error);\n      }\n    }\n\n    if (savedCurrentTurn) {\n      setCurrentTurn(parseInt(savedCurrentTurn, 10));\n    }\n\n    if (savedStyle) {\n      setStyle(savedStyle);\n    }\n  }, []);\n\n  // Save state to localStorage whenever it changes\n  useEffect(() => {\n    if (apiKey) {\n      localStorage.setItem('details_matter_api_key', apiKey);\n    }\n  }, [apiKey]);\n\n  useEffect(() => {\n    localStorage.setItem('details_matter_conversation', JSON.stringify(conversation));\n  }, [conversation]);\n\n  useEffect(() => {\n    localStorage.setItem('details_matter_current_turn', currentTurn.toString());\n  }, [currentTurn]);\n\n  useEffect(() => {\n    localStorage.setItem('details_matter_style', style);\n  }, [style]);\n\n  // Handle API key setting\n  const handleApiKeySet = (newApiKey) => {\n    console.log('🔑 Setting API key:', newApiKey.substring(0, 8) + '...');\n    try {\n      initializeGoogleAI(newApiKey);\n      setApiKey(newApiKey);\n      setIsApiKeySet(true);\n      setError(null);\n      setSuccess('API key set successfully!');\n      setTimeout(() => setSuccess(null), 3000);\n      console.log('✅ API key set successfully');\n    } catch (error) {\n      console.error('❌ Failed to set API key:', error);\n      setError(error.message);\n      setIsApiKeySet(false);\n    }\n  };\n\n  // Handle API key override\n  const handleApiKeyOverride = (newApiKey) => {\n    console.log('🔄 API key override requested:', newApiKey.substring(0, 8) + '...');\n    if (newApiKey.trim()) {\n      console.log('🔄 Calling handleApiKeySet with new key');\n      handleApiKeySet(newApiKey.trim());\n      setSuccess('API key overridden successfully!');\n    } else {\n      console.log('⚠️ Override cancelled - empty key provided');\n      setError('Please provide a valid API key');\n    }\n  };\n\n  // Handle style change\n  const handleStyleChange = (newStyle) => {\n    setStyle(newStyle);\n  };\n\n  // Handle initial image upload\n  const handleInitialImageUpload = (file) => {\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        setInitialImage(e.target.result);\n      };\n      reader.readAsDataURL(file);\n    } else {\n      setInitialImage(null);\n    }\n  };\n\n  // Clear messages\n  const clearMessages = () => {\n    setError(null);\n    setSuccess(null);\n  };\n\n  return (\n    <div className=\"app\">\n      <header className=\"header\">\n        <h1>🎨 Only Details Matter</h1>\n        <p>\n          Iteratively test how a generative model latches onto a single visual detail in an image\n          and reimagines it inside entirely new scenes of its creation.\n        </p>\n        <p>\n          Each turn: the model picks one salient detail from the previous image (a shape, object, texture, motif)\n          and invents a different context that preserves only that detail's recognizable identity.\n        </p>\n      </header>\n\n      <div className=\"main-content\">\n        <Sidebar\n          apiKey={apiKey}\n          isApiKeySet={isApiKeySet}\n          onApiKeySet={handleApiKeySet}\n          onApiKeyOverride={handleApiKeyOverride}\n          conversation={conversation}\n          currentTurn={currentTurn}\n          style={style}\n          onStyleChange={handleStyleChange}\n          onContinue={null} // Will be implemented in MainArea\n          isLoading={isLoading}\n          error={error}\n          success={success}\n          onClearMessages={clearMessages}\n        />\n\n        <MainArea\n          conversation={conversation}\n          setConversation={setConversation}\n          currentTurn={currentTurn}\n          setCurrentTurn={setCurrentTurn}\n          style={style}\n          initialImage={initialImage}\n          onInitialImageUpload={handleInitialImageUpload}\n          isApiKeySet={isApiKeySet}\n          isLoading={isLoading}\n          setIsLoading={setIsLoading}\n          error={error}\n          setError={setError}\n          success={success}\n          setSuccess={setSuccess}\n          onClearMessages={clearMessages}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}