{"ast":null,"code":"var _jsxFileName = \"/home/mandubian/workspaces/mandubian/bananhack/details_matter_react/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Sidebar from './components/Sidebar';\nimport MainArea from './components/MainArea';\nimport { initializeGoogleAI, isInitialized } from './utils/googleAI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // State management\n  const [apiKey, setApiKey] = useState('');\n  const [isApiKeySet, setIsApiKeySet] = useState(false);\n  const [conversation, setConversation] = useState([]);\n  const [currentTurn, setCurrentTurn] = useState(0);\n  const [style, setStyle] = useState('Photorealistic');\n  const [initialImage, setInitialImage] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n\n  // Load state from localStorage on mount\n  useEffect(() => {\n    const savedApiKey = localStorage.getItem('details_matter_api_key');\n    const savedConversation = localStorage.getItem('details_matter_conversation');\n    const savedCurrentTurn = localStorage.getItem('details_matter_current_turn');\n    const savedStyle = localStorage.getItem('details_matter_style');\n    if (savedApiKey) {\n      setApiKey(savedApiKey);\n      setIsApiKeySet(true);\n      try {\n        initializeGoogleAI(savedApiKey);\n      } catch (error) {\n        console.error('Failed to initialize Google AI:', error);\n      }\n    }\n    if (savedConversation) {\n      try {\n        setConversation(JSON.parse(savedConversation));\n      } catch (error) {\n        console.error('Failed to parse saved conversation:', error);\n      }\n    }\n    if (savedCurrentTurn) {\n      setCurrentTurn(parseInt(savedCurrentTurn, 10));\n    }\n    if (savedStyle) {\n      setStyle(savedStyle);\n    }\n  }, []);\n\n  // Save state to localStorage whenever it changes\n  useEffect(() => {\n    if (apiKey) {\n      localStorage.setItem('details_matter_api_key', apiKey);\n    }\n  }, [apiKey]);\n  useEffect(() => {\n    localStorage.setItem('details_matter_conversation', JSON.stringify(conversation));\n  }, [conversation]);\n  useEffect(() => {\n    localStorage.setItem('details_matter_current_turn', currentTurn.toString());\n  }, [currentTurn]);\n  useEffect(() => {\n    localStorage.setItem('details_matter_style', style);\n  }, [style]);\n\n  // Handle API key setting\n  const handleApiKeySet = newApiKey => {\n    try {\n      initializeGoogleAI(newApiKey);\n      setApiKey(newApiKey);\n      setIsApiKeySet(true);\n      setError(null);\n      setSuccess('API key set successfully!');\n      setTimeout(() => setSuccess(null), 3000);\n    } catch (error) {\n      setError(error.message);\n      setIsApiKeySet(false);\n    }\n  };\n\n  // Handle API key override\n  const handleApiKeyOverride = newApiKey => {\n    if (newApiKey.trim()) {\n      handleApiKeySet(newApiKey.trim());\n    } else {\n      setError('Please provide a valid API key');\n    }\n  };\n\n  // Handle style change\n  const handleStyleChange = newStyle => {\n    setStyle(newStyle);\n  };\n\n  // Handle initial image upload\n  const handleInitialImageUpload = file => {\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = e => {\n        setInitialImage(e.target.result);\n      };\n      reader.readAsDataURL(file);\n    } else {\n      setInitialImage(null);\n    }\n  };\n\n  // Clear messages\n  const clearMessages = () => {\n    setError(null);\n    setSuccess(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uD83C\\uDFA8 Only Details Matter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Iteratively test how a generative model latches onto a single visual detail in an image and reimagines it inside entirely new scenes of its creation.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Each turn: the model picks one salient detail from the previous image (a shape, object, texture, motif) and invents a different context that preserves only that detail's recognizable identity.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        apiKey: apiKey,\n        isApiKeySet: isApiKeySet,\n        onApiKeySet: handleApiKeySet,\n        onApiKeyOverride: handleApiKeyOverride,\n        conversation: conversation,\n        currentTurn: currentTurn,\n        style: style,\n        onStyleChange: handleStyleChange,\n        onContinue: null // Will be implemented in MainArea\n        ,\n        isLoading: isLoading,\n        error: error,\n        success: success,\n        onClearMessages: clearMessages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MainArea, {\n        conversation: conversation,\n        setConversation: setConversation,\n        currentTurn: currentTurn,\n        setCurrentTurn: setCurrentTurn,\n        style: style,\n        initialImage: initialImage,\n        onInitialImageUpload: handleInitialImageUpload,\n        isApiKeySet: isApiKeySet,\n        isLoading: isLoading,\n        setIsLoading: setIsLoading,\n        error: error,\n        setError: setError,\n        success: success,\n        setSuccess: setSuccess,\n        onClearMessages: clearMessages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"HyJYFQf+pl1YRqUvPBxs+WTHoY8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Sidebar","MainArea","initializeGoogleAI","isInitialized","jsxDEV","_jsxDEV","App","_s","apiKey","setApiKey","isApiKeySet","setIsApiKeySet","conversation","setConversation","currentTurn","setCurrentTurn","style","setStyle","initialImage","setInitialImage","isLoading","setIsLoading","error","setError","success","setSuccess","savedApiKey","localStorage","getItem","savedConversation","savedCurrentTurn","savedStyle","console","JSON","parse","parseInt","setItem","stringify","toString","handleApiKeySet","newApiKey","setTimeout","message","handleApiKeyOverride","trim","handleStyleChange","newStyle","handleInitialImageUpload","file","reader","FileReader","onload","e","target","result","readAsDataURL","clearMessages","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onApiKeySet","onApiKeyOverride","onStyleChange","onContinue","onClearMessages","onInitialImageUpload","_c","$RefreshReg$"],"sources":["/home/mandubian/workspaces/mandubian/bananhack/details_matter_react/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Sidebar from './components/Sidebar';\nimport MainArea from './components/MainArea';\nimport { initializeGoogleAI, isInitialized } from './utils/googleAI';\n\nfunction App() {\n  // State management\n  const [apiKey, setApiKey] = useState('');\n  const [isApiKeySet, setIsApiKeySet] = useState(false);\n  const [conversation, setConversation] = useState([]);\n  const [currentTurn, setCurrentTurn] = useState(0);\n  const [style, setStyle] = useState('Photorealistic');\n  const [initialImage, setInitialImage] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n\n  // Load state from localStorage on mount\n  useEffect(() => {\n    const savedApiKey = localStorage.getItem('details_matter_api_key');\n    const savedConversation = localStorage.getItem('details_matter_conversation');\n    const savedCurrentTurn = localStorage.getItem('details_matter_current_turn');\n    const savedStyle = localStorage.getItem('details_matter_style');\n\n    if (savedApiKey) {\n      setApiKey(savedApiKey);\n      setIsApiKeySet(true);\n      try {\n        initializeGoogleAI(savedApiKey);\n      } catch (error) {\n        console.error('Failed to initialize Google AI:', error);\n      }\n    }\n\n    if (savedConversation) {\n      try {\n        setConversation(JSON.parse(savedConversation));\n      } catch (error) {\n        console.error('Failed to parse saved conversation:', error);\n      }\n    }\n\n    if (savedCurrentTurn) {\n      setCurrentTurn(parseInt(savedCurrentTurn, 10));\n    }\n\n    if (savedStyle) {\n      setStyle(savedStyle);\n    }\n  }, []);\n\n  // Save state to localStorage whenever it changes\n  useEffect(() => {\n    if (apiKey) {\n      localStorage.setItem('details_matter_api_key', apiKey);\n    }\n  }, [apiKey]);\n\n  useEffect(() => {\n    localStorage.setItem('details_matter_conversation', JSON.stringify(conversation));\n  }, [conversation]);\n\n  useEffect(() => {\n    localStorage.setItem('details_matter_current_turn', currentTurn.toString());\n  }, [currentTurn]);\n\n  useEffect(() => {\n    localStorage.setItem('details_matter_style', style);\n  }, [style]);\n\n  // Handle API key setting\n  const handleApiKeySet = (newApiKey) => {\n    try {\n      initializeGoogleAI(newApiKey);\n      setApiKey(newApiKey);\n      setIsApiKeySet(true);\n      setError(null);\n      setSuccess('API key set successfully!');\n      setTimeout(() => setSuccess(null), 3000);\n    } catch (error) {\n      setError(error.message);\n      setIsApiKeySet(false);\n    }\n  };\n\n  // Handle API key override\n  const handleApiKeyOverride = (newApiKey) => {\n    if (newApiKey.trim()) {\n      handleApiKeySet(newApiKey.trim());\n    } else {\n      setError('Please provide a valid API key');\n    }\n  };\n\n  // Handle style change\n  const handleStyleChange = (newStyle) => {\n    setStyle(newStyle);\n  };\n\n  // Handle initial image upload\n  const handleInitialImageUpload = (file) => {\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        setInitialImage(e.target.result);\n      };\n      reader.readAsDataURL(file);\n    } else {\n      setInitialImage(null);\n    }\n  };\n\n  // Clear messages\n  const clearMessages = () => {\n    setError(null);\n    setSuccess(null);\n  };\n\n  return (\n    <div className=\"app\">\n      <header className=\"header\">\n        <h1>🎨 Only Details Matter</h1>\n        <p>\n          Iteratively test how a generative model latches onto a single visual detail in an image\n          and reimagines it inside entirely new scenes of its creation.\n        </p>\n        <p>\n          Each turn: the model picks one salient detail from the previous image (a shape, object, texture, motif)\n          and invents a different context that preserves only that detail's recognizable identity.\n        </p>\n      </header>\n\n      <div className=\"main-content\">\n        <Sidebar\n          apiKey={apiKey}\n          isApiKeySet={isApiKeySet}\n          onApiKeySet={handleApiKeySet}\n          onApiKeyOverride={handleApiKeyOverride}\n          conversation={conversation}\n          currentTurn={currentTurn}\n          style={style}\n          onStyleChange={handleStyleChange}\n          onContinue={null} // Will be implemented in MainArea\n          isLoading={isLoading}\n          error={error}\n          success={success}\n          onClearMessages={clearMessages}\n        />\n\n        <MainArea\n          conversation={conversation}\n          setConversation={setConversation}\n          currentTurn={currentTurn}\n          setCurrentTurn={setCurrentTurn}\n          style={style}\n          initialImage={initialImage}\n          onInitialImageUpload={handleInitialImageUpload}\n          isApiKeySet={isApiKeySet}\n          isLoading={isLoading}\n          setIsLoading={setIsLoading}\n          error={error}\n          setError={setError}\n          success={success}\n          setSuccess={setSuccess}\n          onClearMessages={clearMessages}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}